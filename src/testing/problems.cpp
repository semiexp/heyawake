
#include "testing.h"

/* 
Format for each room: (top y, top x, height, width, hint)
 */

/* 
Source: http://www.nikoli.com/en/puzzles/heyawake/rule.html
 */

int problem1[][5] = 
{
	{ 0, 0, 2, 2, 2 },
	{ 0, 2, 2, 1, -1 },
	{ 0, 3, 2, 3, -1 },
	{ 0, 6, 1, 4, -1 },
	{ 1, 6, 1, 3, -1 },
	{ 1, 9, 4, 1, -1 },
	{ 2, 0, 2, 4, -1 },
	{ 2, 4, 3, 2, -1 },
	{ 2, 6, 3, 3, 5 },
	{ 4, 0, 3, 1, -1 },
	{ 4, 1, 2, 1, 0 },
	{ 4, 2, 3, 2, 1 },
	{ 5, 4, 2, 3, -1 },
	{ 5, 7, 2, 3, 2 },
	{ 6, 1, 1, 1, 1 },
	{ 7, 0, 3, 1, 2 },
	{ 7, 1, 3, 2, -1 },
	{ 7, 3, 1, 3, -1 },
	{ 7, 6, 3, 2, -1 },
	{ 7, 8, 1, 2, -1 },
	{ 8, 3, 2, 3, 3 },
	{ 8, 8, 2, 2, -1 }
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 1
*/

int problem2[][5] = 
{
	{ 0, 0, 2, 2, -1 },
	{ 0, 2, 2, 3, -1 },
	{ 0, 5, 2, 3, -1 },
	{ 0, 8, 2, 2, 0 },
	{ 2, 0, 3, 2, -1 },
	{ 2, 2, 3, 3, 5 },
	{ 2, 5, 1, 3, -1 },
	{ 2, 8, 3, 2, 1 },
	{ 3, 5, 2, 3, 0 },
	{ 5, 0, 3, 2, 1 },
	{ 5, 2, 2, 3, 2 },
	{ 5, 5, 3, 3, 2 },
	{ 5, 8, 3, 2, -1 },
	{ 7, 2, 1, 3, -1 },
	{ 8, 0, 2, 2, 0 },
	{ 8, 2, 2, 3, -1 },
	{ 8, 5, 2, 3, 1 },
	{ 8, 8, 2, 2, -1 }
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 2
*/

int problem3[][5] =
{
	{ 0, 0, 1, 1, 1 },
	{ 0, 1, 1, 4, -1 },
	{ 0, 5, 1, 1, 1 },
	{ 0, 6, 1, 4, -1 },
	{ 1, 0, 2, 5, 4 },
	{ 1, 5, 2, 5, 4 },
	{ 3, 0, 1, 1, 1 },
	{ 3, 1, 1, 4, -1 },
	{ 3, 5, 3, 5, 4 },
	{ 4, 0, 2, 5, 4 },
	{ 6, 0, 4, 2, 3 },
	{ 6, 2, 4, 3, 2 },
	{ 6, 5, 4, 2, 4 },
	{ 6, 7, 4, 1, -1 },
	{ 6, 8, 4, 2, -1 }
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 3
*/

int problem4[][5] =
{
	{ 0, 0, 3, 2, 2 },
	{ 0, 2, 3, 2, 2 },
	{ 0, 4, 1, 4, -1 },
	{ 0, 8, 3, 2, -1 },
	{ 1, 4, 2, 4, 3 },
	{ 3, 0, 3, 2, 1 },
	{ 3, 2, 3, 3, 5 },
	{ 3, 5, 3, 3, -1 },
	{ 3, 8, 3, 2, 3 },
	{ 6, 0, 2, 2, 2 },
	{ 6, 2, 1, 3, -1 },
	{ 6, 5, 1, 3, 2 },
	{ 6, 8, 3, 2, 2 },
	{ 7, 2, 3, 2, 2 },
	{ 7, 4, 3, 2, 2 },
	{ 7, 6, 3, 2, -1 },
	{ 8, 0, 2, 2, 1 },
	{ 9, 8, 1, 2, -1 }
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 4
*/

int problem5[][5] =
{
	{ 0, 0, 3, 1, -1 },
	{ 0, 1, 3, 1, -1 },
	{ 0, 2, 2, 3, 3 },
	{ 0, 5, 2, 4, 3 },
	{ 0, 9, 2, 2, -1 },
	{ 0, 11, 1, 7, -1 },
	{ 1, 11, 2, 3, 3 },
	{ 1, 14, 3, 2, 2 },
	{ 1, 16, 2, 2, -1 },
	{ 3, 16, 3, 2, 2 },
	{ 6, 16, 3, 2, 0 },
	{ 9, 15, 1, 3, 1 },
	{ 9, 12, 1, 3, 1 },
	{ 4, 14, 1, 2, -1 },
	{ 3, 11, 1, 3, -1 },
	{ 4, 10, 1, 4, 1 },
	{ 2, 10, 2, 1, -1 },
	{ 2, 9, 3, 1, -1 },
	{ 2, 7, 3, 2, 1 },
	{ 2, 2, 1, 5, -1 },
	{ 3, 0, 7, 1, -1 },
	{ 3, 1, 3, 3, 4 },
	{ 3, 4, 4, 3, -1 },
	{ 6, 1, 2, 3, 2 },
	{ 8, 1, 2, 2, -1 },
	{ 8, 3, 2, 3, 1 },
	{ 8, 6, 1, 4, 1 },
	{ 9, 6, 1, 6, -1 },
	{ 5, 7, 3, 3, 5 },
	{ 5, 10, 2, 3, -1 },
	{ 7, 10, 2, 3, 3 },
	{ 7, 13, 2, 3, -1 },
	{ 6, 13, 1, 3, -1 },
	{ 5, 13, 1, 3, -1 },
	{ 7, 4, 1, 3, -1 }
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 5
*/

int problem6[][5] =
{
	{0, 0, 2, 2, 2},
	{ 0, 2, 2, 2, -1 },
	{ 0, 4, 2, 2, -1 },
	{ 0, 6, 4, 2, 3 },
	{ 4, 6, 3, 2, 3 },
	{ 7, 6, 3, 2, 0 },
	{ 9, 0, 1, 3, 2 },
	{ 8, 3, 2, 3, -1 },
	{ 6, 3, 2, 3, 2 },
	{ 6, 0, 1, 3, 2 },
	{ 7, 0, 2, 3, -1 },
	{ 2, 0, 1, 3, 1 },
	{ 2, 3, 2, 3, 1 },
	{ 4, 3, 2, 3, -1 },
	{ 3, 2, 3, 1, -1 },
	{ 3, 0, 3, 2, -1 },
	{ 0, 8, 2, 3, 2 },
	{ 0, 11, 3, 1, -1 },
	{ 0, 12, 3, 2, 3 },
	{ 0, 14, 2, 2, 0 },
	{ 0, 16, 3, 2, -1 },
	{ 3, 16, 3, 2, 3 },
	{ 6, 14, 4, 3, 4 },
	{ 6, 17, 4, 1, 2 },
	{ 6, 12, 4, 2, 1 },
	{ 7, 8, 3, 3, -1 },
	{ 7, 11, 3, 1, 2 },
	{ 6, 11, 1, 1, -1 },
	{ 4, 8, 3, 3, 3 },
	{ 2, 8, 2, 3, 2 },
	{ 3, 11, 1, 3, 2 },
	{ 4, 11, 2, 3, -1 },
	{ 2, 14, 4, 2, -1 },
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 8 (flipped)
*/

int problem7[][5] =
{
	{0, 12, 2, 2, -1},
	{ 0, 10, 3, 2, -1 },
	{ 2, 12, 2, 2, 1 },
	{ 3, 10, 3, 2, -1 },
	{ 4, 12, 2, 2, -1 },
	{ 3, 7, 3, 3, 3 },
	{ 1, 6, 2, 4, -1 },
	{ 0, 0, 1, 10, 5 },
	{ 1, 4, 2, 2, 0 },
	{ 3, 4, 3, 3, -1 },
	{ 3, 2, 3, 2, 3 },
	{ 4, 0, 2, 2, -1 },
	{ 1, 0, 3, 2, -1 },
	{ 1, 2, 2, 2, -1 },
	{ 6, 0, 5, 3, 5 },
	{ 6, 3, 1, 11, 6 },
	{ 7, 3, 4, 3, -1 },
	{ 7, 6, 4, 3, 5 },
	{ 11, 6, 4, 3, 5 },
	{ 7, 9, 8, 2, 3 },
	{ 7, 11, 2, 3, -1 },
	{ 9, 11, 2, 3, 2 },
	{ 11, 11, 2, 3, -1 },
	{ 13, 11, 3, 3, 3 },
	{ 16, 11, 5, 1, 3 },
	{ 22, 12, 2, 2, 2 },
	{ 21, 8, 3, 4, 4 },
	{ 18, 12, 4, 2, -1 },
	{ 16, 12, 2, 2, -1 },
	{ 15, 9, 2, 2, 1 },
	{ 17, 9, 2, 2, -1 },
	{ 19, 9, 2, 2, -1 },
	{ 15, 5, 4, 4, 4 },
	{ 19, 5, 2, 4, 4 },
	{ 21, 5, 3, 3, -1 },
	{ 21, 3, 3, 2, 1 },
	{ 23, 0, 1, 3, 1 },
	{ 21, 0, 2, 3, 2 },
	{ 20, 0, 1, 3, 2 },
	{ 15, 3, 6, 2, 5 },
	{ 11, 4, 4, 2, -1 },
	{ 11, 2, 4, 2, 1 },
	{ 11, 0, 2, 2, 2 },
	{ 13, 0, 2, 2, 1 },
	{ 15, 0, 3, 3, 2 },
	{ 18, 0, 2, 3, 1 },
};

/*
Source: http://www.nikoli.com/en/puzzles/heyawake/ Sample 10 (flipped)
*/

int problem8[][5] =
{
	{0, 0, 2, 2, 2},
	{ 2, 0, 2, 2, -1 },
	{ 4, 0, 2, 2, 2 },
	{ 6, 0, 2, 2, -1 },
	{ 8, 0, 2, 2, -1 },
	{ 10, 0, 2, 4, -1 },
	{ 12, 0, 2, 3, 3 },
	{ 14, 0, 2, 6, 2 },
	{ 12, 3, 2, 2, 2 },
	{ 16, 3, 2, 2, 2 },
	{ 16, 0, 2, 3, -1 },
	{ 22, 0, 2, 2, -1 },
	{ 22, 2, 2, 2, -1 },
	{ 22, 4, 2, 2, -1 },
	{ 24, 0, 2, 4, 1 },
	{ 26, 0, 2, 3, -1 },
	{ 28, 0, 2, 3, 2 },
	{ 30, 0, 2, 2, 2 },
	{ 32, 0, 2, 2, -1 },
	{ 34, 0, 2, 2, -1 },
	{ 0, 2, 2, 3, -1 },
	{ 2, 2, 2, 2, 2 },
	{ 4, 2, 2, 2, -1 },
	{ 6, 2, 2, 4, 3 },
	{ 8, 2, 2, 2, -1 },
	{ 30, 2, 2, 4, 2 },
	{ 32, 2, 2, 2, 1 },
	{ 34, 2, 2, 2, 0 },
	{ 32, 4, 2, 2, 1 },
	{ 34, 4, 2, 2, 2 },
	{ 34, 6, 2, 3, 2 },
	{ 34, 9, 2, 3, 2 },
	{ 34, 12, 2, 2, 2 },
	{ 34, 14, 2, 3, 2 },
	{ 34, 17, 2, 3, 2 },
	{ 32, 6, 2, 2, 0 },
	{ 32, 8, 2, 6, 2 },
	{ 32, 14, 2, 6, -1 },
	{ 30, 17, 2, 3, 3 },
	{ 30, 14, 2, 3, 2 },
	{ 30, 8, 2, 6, -1 },
	{ 30, 6, 2, 2, 1 },
	{ 28, 3, 2, 2, -1 },
	{ 26, 3, 2, 3, 3 },
	{ 24, 4, 2, 2, 2 },
	{ 24, 6, 2, 2, 1 },
	{ 22, 6, 2, 2, 1 },
	{ 20, 0, 2, 5, 4 },
	{ 20, 5, 2, 3, 1 },
	{ 18, 0, 2, 4, 3 },
	{ 18, 4, 2, 4, 3 },
	{ 16, 5, 2, 4, 3 },
	{ 18, 8, 2, 2, 0 },
	{ 20, 8, 2, 3, 2 },
	{ 22, 8, 2, 3, -1 },
	{ 24, 8, 2, 5, -1 },
	{ 26, 6, 2, 4, -1 },
	{ 28, 5, 2, 5, -1 },
	{ 26, 10, 2, 4, 3 },
	{ 28, 10, 2, 2, 0 },
	{ 28, 12, 2, 2, -1 },
	{ 26, 14, 2, 3, 2 },
	{ 26, 17, 2, 3, -1 },
	{ 28, 14, 2, 2, 2 },
	{ 28, 16, 2, 2, 0 },
	{ 28, 18, 2, 2, -1 },
	{ 24, 13, 2, 4, 3 },
	{ 24, 17, 2, 3, 1 },
	{ 22, 11, 2, 2, -1 },
	{ 22, 13, 2, 2, -1 },
	{ 22, 15, 2, 3, 3 },
	{ 22, 18, 2, 2, -1 },
	{ 20, 18, 2, 2, -1 },
	{ 20, 16, 2, 2, -1 },
	{ 20, 13, 2, 3, -1 },
	{ 20, 11, 2, 2, 0 },
	{ 18, 10, 2, 2, -1 },
	{ 18, 12, 2, 2, -1 },
	{ 18, 14, 2, 2, 0 },
	{ 18, 16, 2, 2, 1 },
	{ 18, 18, 2, 2, 1 },
	{ 16, 18, 2, 2, 1 },
	{ 14, 17, 2, 3, 1 },
	{ 14, 14, 2, 3, 1 },
	{ 16, 14, 2, 4, -1 },
	{ 16, 12, 2, 2, -1 },
	{ 14, 12, 2, 2, -1 },
	{ 16, 9, 2, 3, 3 },
	{ 14, 10, 2, 2, 1 },
	{ 14, 8, 2, 2, -1 },
	{ 14, 6, 2, 2, -1 },
	{ 12, 5, 2, 3, 1 },
	{ 12, 8, 2, 2, 2 },
	{ 12, 10, 2, 2, 1 },
	{ 12, 12, 2, 3, 3 },
	{ 12, 15, 2, 5, -1 },
	{ 10, 15, 2, 5, 2 },
	{ 10, 12, 2, 3, 2 },
	{ 10, 10, 2, 2, -1 },
	{ 10, 8, 2, 2, 1 },
	{ 10, 4, 2, 2, 2 },
	{ 8, 4, 2, 2, 1 },
	{ 8, 6, 2, 2, 2 },
	{ 10, 6, 2, 2, -1 },
	{ 6, 6, 2, 2, 2 },
	{ 6, 8, 2, 2, 2 },
	{ 4, 9, 2, 3, 2 },
	{ 2, 10, 2, 4, 2 },
	{ 2, 14, 2, 6, 4 },
	{ 0, 18, 2, 2, 0 },
	{ 0, 15, 2, 3, -1 },
	{ 0, 13, 2, 2, 1 },
	{ 0, 11, 2, 2, 0 },
	{ 0, 5, 2, 3, 3 },
	{ 0, 8, 2, 3, -1 },
	{ 2, 4, 2, 4, 1 },
	{ 2, 8, 2, 2, -1 },
	{ 4, 6, 2, 3, 1 },
	{ 4, 4, 2, 2, 2 },
	{ 4, 18, 2, 2, 2 },
	{ 6, 16, 2, 2, 2 },
	{ 8, 18, 2, 2, 2 },
	{ 6, 18, 2, 2, 0 },
	{ 8, 16, 2, 2, -1 },
	{ 4, 16, 2, 2, -1 },
	{ 4, 14, 2, 2, -1 },
	{ 6, 14, 2, 2, -1 },
	{ 8, 14, 2, 2, -1 },
	{ 4, 12, 2, 2, 0 },
	{ 6, 10, 2, 4, 2 },
	{ 8, 12, 2, 2, -1 },
	{ 8, 8, 2, 4, -1 },
};

HYProblem GetTestProblem(int pid)
{
	HYProblem ret;
	int (*src)[5] = nullptr, len = 0;

	switch (pid) {
	case 0:
		ret = HYProblem(10, 10);
		src = problem1;
		len = sizeof(problem1) / (5 * sizeof(int));
		break; 
	case 1:
		ret = HYProblem(10, 10);
		src = problem2;
		len = sizeof(problem2) / (5 * sizeof(int));
		break;
	case 2:
		ret = HYProblem(10, 10);
		src = problem3;
		len = sizeof(problem3) / (5 * sizeof(int));
		break;
	case 3:
		ret = HYProblem(10, 10);
		src = problem4;
		len = sizeof(problem4) / (5 * sizeof(int));
		break;
	case 4:
		ret = HYProblem(10, 18);
		src = problem5;
		len = sizeof(problem5) / (5 * sizeof(int));
		break;
	case 5:
		ret = HYProblem(10, 18);
		src = problem6;
		len = sizeof(problem6) / (5 * sizeof(int));
		break;
	case 6:
		ret = HYProblem(24, 14);
		src = problem7;
		len = sizeof(problem7) / (5 * sizeof(int));
		break;
	case 7:
		ret = HYProblem(36, 20);
		src = problem8;
		len = sizeof(problem8) / (5 * sizeof(int));
		break;
	}

	for (int i = 0; i < len; i++) {
		ret.AddHint(src[i][0], src[i][1], src[i][2], src[i][3], src[i][4]);
	}

	return ret;
}
